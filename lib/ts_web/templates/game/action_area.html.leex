<%= if @game.current_card do %>
  <% %{title: title, belongs_to: belongs_to, stage: stage, op: op, is_asterisk: is_asterisk} = Map.get(Ts.Game.Card.cards, @game.current_card) %>
  <svg phx-hook="card" id="current_card">
    <rect class="<%= op_class(belongs_to) %>" x="10" y="10" width="15" height="15"></rect>
    <svg x="10" y="10" width="15" height="15">
      <text x="50%" y="50%" class="<%= op_class(belongs_to) %>">
        <%= op %>
      </text>
    </svg>
    <rect class="<%= stage_class(stage) %>" x="25" y="10" width="45" height="15"></rect>
    <svg x="25" y="10" width="45" height="15">
      <text x="50%" y="50%" class="<%= stage_class(stage) %>">
        <%= Gettext.dgettext(TsWeb.Gettext, "card", stage) %>
      </text>
    </svg>
    <rect class="card" x="10" y="25" width="60" height="25"></rect>
    <svg x="10" y="25" width="60" height="25">
      <text x="50%" y="50%" class="card-title">
        <%= Gettext.dgettext(TsWeb.Gettext, "card", title) %> <%= if is_asterisk, do: "*", else: "" %>
      </text>
    </svg>

    <svg class="desc">
      <rect class="<%= op_class(belongs_to) %>" x="80" y="10" width="30" height="30"></rect>
      <svg x="80" y="10" width="30" height="30">
        <text x="50%" y="50%" class="<%= op_class(belongs_to) %>">
          <%= op %>
        </text>
      </svg>
      <rect class="<%= stage_class(stage) %>" x="110" y="10" width="130" height="30"></rect>
      <svg x="110" y="10" width="130" height="30">
        <text x="50%" y="50%" class="<%= stage_class(stage) <> "-bg" %>">
          <%= Gettext.dgettext(TsWeb.Gettext, "card", stage) %>
        </text>
      </svg>

      <rect class="card" x="80" y="40" width="160" height="200" z-index="99"></rect>
      <svg x="80" y="40" width="160" height="200">
        <text x="50%" y="15%" class="card-bg-title">
          <%= Gettext.dgettext(TsWeb.Gettext, "card", title) %> <%= if is_asterisk, do: "*", else: "" %>
        </text>
        <text class="card-desc" x="50%" y="30%">
          <%= for {line, idx} <- Enum.with_index(String.split(Gettext.dgettext(TsWeb.Gettext, "card", title <> "_desc"), "\n")) do %>
            <tspan  x="50%" y="<%= 6 * idx + 30 %>%"><%= line %></tspan>
          <% end %>
        </text>
        <%= if is_asterisk do %>
          <text class="remove-desc" x="50%" y="90%"><%= gettext("remove_desc") %></text>
        <% end %>
      </svg>
    </svg>
  </svg>
<% end %>

<!-- Cards -->
<%= for {card, idx} <- Enum.with_index(@game.player_cards) do %>
  <% %{title: title, belongs_to: belongs_to, stage: stage, op: op, is_asterisk: is_asterisk} = Map.get(Ts.Game.Card.cards, card) %>
  <% y_pos = if card == @game.selected_card, do: 660, else: 670 %>
  <svg phx-hook="card" id="card-<%= card %>" class="clickable" <%= if card in @game.cards_can_play, do: raw(~s(phx-click="attempt_play_card" phx-value-card="#{card}")), else: "" %>>
    <rect class="<%= op_class(belongs_to) %>" x="<%= 500 + idx * 65 %>" y="<%= y_pos %>" width="15" height="15"></rect>
    <svg x="<%= 500 + idx * 65 %>" y="<%= y_pos %>" width="15" height="15">
      <text x="50%" y="50%" class="<%= op_class(belongs_to) %>">
        <%= op %>
      </text>
    </svg>
    <rect class="<%= stage_class(stage) %>" x="<%= 515 + idx * 65 %>" y="<%= y_pos %>" width="45" height="15"></rect>
    <svg x="<%= 515 + idx * 65 %>" y="<%= y_pos %>" width="45" height="15">
      <text x="50%" y="50%" class="<%= stage_class(stage) %>">
        <%= Gettext.dgettext(TsWeb.Gettext, "card", stage) %>
      </text>
    </svg>
    <rect class="card" x="<%= 500 + idx * 65 %>" y="<%= y_pos + 15 %>" width="60" height="25">
    </rect>
    <svg x="<%= 500 + idx * 65 %>" y="<%= y_pos + 15 %>" width="60" height="25">
      <text x="50%" y="50%" class="card-title">
        <%= Gettext.dgettext(TsWeb.Gettext, "card", title) %> <%= if is_asterisk, do: "*", else: "" %>
      </text>
    </svg>

    <svg class="desc">
      <rect class="<%= op_class(belongs_to) %>" x="900" y="420" width="30" height="30"></rect>
      <svg x="900" y="420" width="30" height="30">
        <text x="50%" y="50%" class="<%= op_class(belongs_to) %>">
          <%= op %>
        </text>
      </svg>
      <rect class="<%= stage_class(stage) %>" x="930" y="420" width="130" height="30"></rect>
      <svg x="930" y="420" width="130" height="30">
        <text x="50%" y="50%" class="<%= stage_class(stage) <> "-bg" %>">
          <%= Gettext.dgettext(TsWeb.Gettext, "card", stage) %>
        </text>
      </svg>

      <rect class="card" x="900" y="450" width="160" height="200" z-index="99"></rect>
      <svg x="900" y="450" width="160" height="200">
        <text x="50%" y="15%" class="card-bg-title">
          <%= Gettext.dgettext(TsWeb.Gettext, "card", title) %> <%= if is_asterisk, do: "*", else: "" %>
        </text>
        <text class="card-desc" x="50%" y="30%">
          <%= for {line, idx} <- Enum.with_index(String.split(Gettext.dgettext(TsWeb.Gettext, "card", title <> "_desc"), "\n")) do %>
            <tspan  x="50%" y="<%= 6 * idx + 30 %>%"><%= line %></tspan>
          <% end %>
        </text>
        <%= if is_asterisk do %>
          <text class="remove-desc" x="50%" y="90%"><%= gettext("remove_desc") %></text>
        <% end %>
      </svg>
    </svg>
  </svg>
<% end %>
<!-- Action Area -->
<%= if length(@game.current_player) == 1 do %>
  <%= if [:usa] == @game.current_player do %>
    <text x="760" y="600" class="usa-presence bold-text"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
  <% else %>
    <text x="760" y="600" class="ussr-presence bold-text"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
  <% end %>
<% else %>
  <%= cond do %>
    <% Ts.Server.Room.audience?(@room, @user_id) -> %>
      <text x="760" y="600"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
    <% Ts.Server.Room.usa_player?(@room, @user_id) -> %>
      <text x="760" y="600" class="usa-presence bold-text"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
    <% Ts.Server.Room.ussr_player?(@room, @user_id) -> %>
      <text x="760" y="600" class="ussr-presence bold-text"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
  <% end %>
<% end %>
<%= case @game.status do %>
  <% :perform_headline_phase_1 -> %>
    <text x="760" y="560" class="info">
      <%= gettext("usa") %>: <%= Gettext.dgettext(TsWeb.Gettext, "card", @game.memo.usa) %>(<%= Map.get(Card.cards, @game.memo.usa).op %>)

      <%= gettext("ussr") %>: <%= Gettext.dgettext(TsWeb.Gettext, "card", @game.memo.ussr) %>(<%= Map.get(Card.cards, @game.memo.ussr).op %>)
    </text>
  <% _ -> %>
<% end %>

<%= if @game.current_card do %>
  <%= if [:usa] == @game.current_player do %>
    <text x="760" y="580" class="usa-presence bold-text"><%= gettext("implement_event", %{side: gettext("usa"), event: Gettext.dgettext(TsWeb.Gettext, "card", @game.current_card)}) %></text>
  <% else %>
    <text x="760" y="580" class="ussr-presence bold-text"><%= gettext("implement_event", %{side: gettext("ussr"), event: Gettext.dgettext(TsWeb.Gettext, "card", @game.current_card)}) %></text>
  <% end %>
<% end %>

<%
  button_width = 60
  button_gap = 10
  button_area_width = 300
%>
<%= for {action, idx} <- Enum.with_index(@game.user_actions) do %>
  <rect
    x="<%= 600 + (button_area_width - length(@game.user_actions) * button_width + (length(@game.user_actions) - 1) * button_gap) / 2 + (button_width + button_gap) * idx %>"
    y="620" width="<%= button_width %>" height="20"
    class="<%= op_class(which_side(@room, @user_id)) %>"
  >
  </rect>
  <svg
    x="<%= 600 + (button_area_width - length(@game.user_actions) * button_width + (length(@game.user_actions) - 1) * button_gap) / 2 + (button_width + button_gap) * idx %>"
    y="620" width="<%= button_width %>" height="20"
    phx-click="submit_action"
    phx-value-action="<%= action %>"
    class="clickable"
  >
    <text x="50%" y="50%" class="<%= op_class(which_side(@room, @user_id)) %>">
      <%= Gettext.gettext(TsWeb.Gettext, action) %>
    </text>
  </svg>
<% end %>
