<%= for {card, idx} <- Enum.with_index(@game.player_cards) do %>
  <% %{title: title, belongs_to: belongs_to, stage: stage, op: op, is_asterisk: is_asterisk} = Map.get(Ts.Game.Card.cards, card) %>
  <svg phx-hook="card" id="card-<%= card %>" class="clickable">
    <rect class="<%= op_class(belongs_to) %>" x="<%= 500 + idx * 65 %>" y="670" width="15" height="15"></rect>
    <svg x="<%= 500 + idx * 65 %>" y="670" width="15" height="15">
      <text x="50%" y="50%" class="<%= op_class(belongs_to) %>">
        <%= op %>
      </text>
    </svg>
    <rect class="<%= stage_class(stage) %>" x="<%= 515 + idx * 65 %>" y="670" width="45" height="15"></rect>
    <svg x="<%= 515 + idx * 65 %>" y="670" width="45" height="15">
      <text x="50%" y="50%" class="<%= stage_class(stage) %>">
        <%= Gettext.dgettext(TsWeb.Gettext, "card", stage) %>
      </text>
    </svg>
    <rect class="card" x="<%= 500 + idx * 65 %>" y="685" width="60" height="25">
    </rect>
    <svg x="<%= 500 + idx * 65 %>" y="685" width="60" height="25">
      <text x="50%" y="50%" class="card-title">
        <%= Gettext.dgettext(TsWeb.Gettext, "card", title) %> <%= if is_asterisk, do: "*", else: "" %>
      </text>
    </svg>

    <rect class="desc" x="900" y="450" width="160" height="200">
    </rect>
  </svg>
<% end %>
<!-- Action Area -->
<%= if length(@game.current_player) == 1 do %>
  <%= if [:usa] == @game.current_player do %>
    <text x="760" y="600" class="usa-presence"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
  <% else %>
    <text x="760" y="600" class="ussr-presence"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
  <% end %>
<% else %>
  <%= cond do %>
    <% Ts.Server.Room.audience?(@room, @user_id) -> %>
      <text x="760" y="600"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
    <% Ts.Server.Room.usa_player?(@room, @user_id) -> %>
      <text x="760" y="600" class="usa-presence bold-text"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
    <% Ts.Server.Room.ussr_player?(@room, @user_id) -> %>
      <text x="760" y="600" class="ussr-presence bold-text"><%= Gettext.gettext(TsWeb.Gettext, Atom.to_string(@game.status)) %></text>
  <% end %>
<% end %>


<%
  button_width = 60
  button_gap = 10
  button_area_width = 300
%>
<%= for {action, idx} <- Enum.with_index(@game.user_actions) do %>
  <rect
    x="<%= 600 + (button_area_width - length(@game.user_actions) * button_width + (length(@game.user_actions) - 1) * button_gap) / 2 + (button_width + button_gap) * idx %>"
    y="620" width="<%= button_width %>" height="20"
    class="<%= op_class(which_side(@room, @user_id)) %>"
  >
  </rect>
  <svg
    x="<%= 600 + (button_area_width - length(@game.user_actions) * button_width + (length(@game.user_actions) - 1) * button_gap) / 2 + (button_width + button_gap) * idx %>"
    y="620" width="<%= button_width %>" height="20"
    phx-click="submit_action"
    phx-value-action="<%= action %>"
    class="clickable"
  >
    <text x="50%" y="50%" class="<%= op_class(which_side(@room, @user_id)) %>">
      <%= Gettext.gettext(TsWeb.Gettext, action) %>
    </text>
  </svg>
<% end %>
